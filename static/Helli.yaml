openapi: 3.0.3
info:
  title: Helli Scholl Project API
  version: 1.0.0
  description: Your project description
paths:
  /attendance/:
    post:
      operationId: attendance_create
      description: |-
        Filter Absences via POST.

        ### Authorization
        - **JWT Token** is required in the `Authorization` header with the format:
          `Bearer <your_token_here>`

        ### Request Body
        ```json
        {
            "student__first_name": "Ali",
            "student__last_name": "Rezaei",
            "student__grade_range": [1, 3],
            "date_range": {
                "start": "2024-01-01",
                "end": "2024-12-31"
            },
            "status": "absent"
        }
        ```

        ### Test Example
        **Curl Command:**
        ```bash
        curl -X POST http://127.0.0.1:8000/api/absences/filter/     -H "Authorization: Bearer <your_token_here>"     -H "Content-Type: application/json"     -d '{
            "student__first_name": "Ali",
            "student__grade_range": [1, 3],
            "date_range": {
                "start": "2024-01-01",
                "end": "2024-12-31"
            },
            "status": "absent"
        }'
        ```

        ### Expected Response
        - **Status Code:** `200 OK`
        - **Response Body:**
        ```json
        [
            {
                "student": "Ali Rezaei",
                "date": "2024-01-15",
                "status": "absent"
            },
            {
                "student": "Ali Rezaei",
                "date": "2024-02-20",
                "status": "absent"
            }
        ]
        ```

        ### Error Responses
        - **Status Code:** `400 Bad Request`
        - **Response Body:**
        ```json
        {
            "date_range": [
                "Start date must be before end date."
            ],
            "student__grade_range": [
                "Grade must be a valid range."
            ]
        }
        ```
        ### Filters
        - `student__first_name`: **Partial match** (case insensitive)
        - `student__last_name`: **Partial match** (case insensitive)
        - `student__grade`: **Exact match**
        - `student__grade_range`: **Range filter**
        - `student__national_code`: **Exact match**
        - `date`: **Exact match**
        - `date_range`: **From-to range filter**
        - `status`: **Choices** - `present`, `absent`
      tags:
      - attendance
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /attendance/create/:
    post:
      operationId: attendance_create_create
      description: ویو برای ثبت غیبت دانش‌آموز بر اساس کد ملی و تاریخ.
      tags:
      - attendance
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /attendance/detail/{national_code}/{date}/:
    put:
      operationId: attendance_detail_update
      description: Update an existing absence record. Provide the student's national
        code and the date of the absence. Include the fields to be updated in the
        request body.
      summary: Update an absence record
      parameters:
      - in: path
        name: date
        schema:
          type: string
        required: true
      - in: path
        name: national_code
        schema:
          type: string
        required: true
      tags:
      - attendance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Absence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Absence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Absence'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Absence'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
    delete:
      operationId: attendance_detail_destroy
      description: Delete an absence record for a student based on their national
        code and date. This action is irreversible.
      summary: Delete an absence record
      parameters:
      - in: path
        name: date
        schema:
          type: string
        required: true
      - in: path
        name: national_code
        schema:
          type: string
        required: true
      tags:
      - attendance
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /authentication/change-password/:
    patch:
      operationId: authentication_change_password_partial_update
      tags:
      - authentication
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /authentication/login/:
    post:
      operationId: authentication_login_create
      description: Authenticates a user with national code and password, returning
        JWT tokens with role and national code.
      summary: User Login
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginErrorResponse'
          description: ''
  /authentication/login/refresh/:
    post:
      operationId: authentication_login_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /authentication/logout/:
    post:
      operationId: authentication_logout_create
      tags:
      - authentication
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /authentication/send-verification-code/:
    post:
      operationId: authentication_send_verification_code_create
      tags:
      - authentication
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /authentication/signup/admin/:
    post:
      operationId: authentication_signup_admin_create
      description: Registers a new admin with their full name and national code.
      summary: Admin Registration
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminSignup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminSignup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminSignup'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSignupSuccessResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSignupErrorResponse'
          description: ''
  /authentication/signup/student/:
    post:
      operationId: authentication_signup_student_create
      description: Registers a new student with their full name, national code, and
        password.
      summary: Student Registration
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentSignup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentSignup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentSignup'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSignupSuccessResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSignupErrorResponse'
          description: ''
  /authentication/update-email/:
    put:
      operationId: authentication_update_email_update
      description: ویو برای به‌روزرسانی ایمیل کاربران بر اساس نقش.
      tags:
      - authentication
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /authentication/user-profile/:
    get:
      operationId: authentication_user_profile_retrieve
      tags:
      - authentication
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /authentication/verify-code/:
    post:
      operationId: authentication_verify_code_create
      tags:
      - authentication
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /grades/days/:
    get:
      operationId: grades_days_list
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Day'
          description: ''
    post:
      operationId: grades_days_create
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Day'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Day'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Day'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
          description: ''
  /grades/days/{id}/:
    get:
      operationId: grades_days_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
          description: ''
    put:
      operationId: grades_days_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Day'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Day'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Day'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
          description: ''
    patch:
      operationId: grades_days_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDay'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDay'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDay'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
          description: ''
    delete:
      operationId: grades_days_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /grades/grades/:
    get:
      operationId: grades_grades_list
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grade'
          description: ''
    post:
      operationId: grades_grades_create
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Grade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Grade'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
  /grades/grades/{id}/:
    get:
      operationId: grades_grades_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    put:
      operationId: grades_grades_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Grade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Grade'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    patch:
      operationId: grades_grades_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGrade'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    delete:
      operationId: grades_grades_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /grades/periods/:
    get:
      operationId: grades_periods_list
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Period'
          description: ''
    post:
      operationId: grades_periods_create
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Period'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Period'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Period'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Period'
          description: ''
  /grades/periods/{id}/:
    get:
      operationId: grades_periods_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Period'
          description: ''
    put:
      operationId: grades_periods_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Period'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Period'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Period'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Period'
          description: ''
    patch:
      operationId: grades_periods_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPeriod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPeriod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPeriod'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Period'
          description: ''
    delete:
      operationId: grades_periods_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /grades/schedules/:
    get:
      operationId: grades_schedules_list
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
          description: ''
    post:
      operationId: grades_schedules_create
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
  /grades/schedules/{id}/:
    get:
      operationId: grades_schedules_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    put:
      operationId: grades_schedules_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    patch:
      operationId: grades_schedules_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    delete:
      operationId: grades_schedules_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /grades/school-classes/:
    get:
      operationId: grades_school_classes_list
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchoolClass'
          description: ''
    post:
      operationId: grades_school_classes_create
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchoolClass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SchoolClass'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SchoolClass'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolClass'
          description: ''
  /grades/school-classes/{id}/:
    get:
      operationId: grades_school_classes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolClass'
          description: ''
    put:
      operationId: grades_school_classes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchoolClass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SchoolClass'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SchoolClass'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolClass'
          description: ''
    patch:
      operationId: grades_school_classes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSchoolClass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSchoolClass'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSchoolClass'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolClass'
          description: ''
    delete:
      operationId: grades_school_classes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /grades/subjects/:
    get:
      operationId: grades_subjects_list
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subject'
          description: ''
    post:
      operationId: grades_subjects_create
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subject'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
  /grades/subjects/{id}/:
    get:
      operationId: grades_subjects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
    put:
      operationId: grades_subjects_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subject'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
    patch:
      operationId: grades_subjects_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubject'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
    delete:
      operationId: grades_subjects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /grades/teachers/:
    get:
      operationId: grades_teachers_list
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Teacher'
          description: ''
    post:
      operationId: grades_teachers_create
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Teacher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Teacher'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
  /grades/teachers/{id}/:
    get:
      operationId: grades_teachers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
    put:
      operationId: grades_teachers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Teacher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Teacher'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
    patch:
      operationId: grades_teachers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeacher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeacher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeacher'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
    delete:
      operationId: grades_teachers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - grades
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /survay/choices/{id}/:
    get:
      operationId: survay_choices_retrieve
      summary: دریافت جزئیات گزینه
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - survay
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Choice'
          description: ''
    put:
      operationId: survay_choices_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - survay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Choice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Choice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Choice'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Choice'
          description: ''
    patch:
      operationId: survay_choices_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - survay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChoice'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Choice'
          description: ''
    delete:
      operationId: survay_choices_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - survay
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /survay/questions/{id}/:
    get:
      operationId: survay_questions_retrieve
      summary: دریافت جزئیات سوال
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - survay
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    put:
      operationId: survay_questions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - survay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    patch:
      operationId: survay_questions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - survay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    delete:
      operationId: survay_questions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - survay
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /survay/questions/{question_id}/choices/:
    get:
      operationId: survay_questions_choices_list
      summary: لیست گزینه‌ها
      parameters:
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      tags:
      - survay
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Choice'
          description: ''
    post:
      operationId: survay_questions_choices_create
      summary: ایجاد گزینه جدید
      parameters:
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      tags:
      - survay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Choice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Choice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Choice'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Choice'
          description: ''
  /survay/responses/:
    post:
      operationId: survay_responses_create
      summary: ثبت پاسخ به سوال
      tags:
      - survay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Response'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Response'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Response'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ''
  /survay/responses/{id}/edit/:
    put:
      operationId: survay_responses_edit_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - survay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Answer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Answer'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    patch:
      operationId: survay_responses_edit_partial_update
      summary: ویرایش پاسخ به سوال
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - survay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
  /survay/surveys/:
    get:
      operationId: survay_surveys_list
      summary: لیست نظرسنجی‌ها
      tags:
      - survay
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Survey'
          description: ''
    post:
      operationId: survay_surveys_create
      summary: ایجاد نظرسنجی جدید
      tags:
      - survay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
  /survay/surveys/{id}/:
    get:
      operationId: survay_surveys_retrieve
      summary: دریافت جزئیات نظرسنجی
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - survay
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
    put:
      operationId: survay_surveys_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - survay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
    patch:
      operationId: survay_surveys_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - survay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSurvey'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
    delete:
      operationId: survay_surveys_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - survay
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /survay/surveys/{survey_id}/questions/:
    get:
      operationId: survay_surveys_questions_list
      summary: لیست سوالات نظرسنجی
      parameters:
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - survay
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
          description: ''
    post:
      operationId: survay_surveys_questions_create
      summary: ایجاد سوال جدید
      parameters:
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - survay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
  /weekly-schedule/days/:
    get:
      operationId: weekly_schedule_days_list
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Day'
          description: ''
    post:
      operationId: weekly_schedule_days_create
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Day'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Day'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Day'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
          description: ''
  /weekly-schedule/days/{id}/:
    get:
      operationId: weekly_schedule_days_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
          description: ''
    put:
      operationId: weekly_schedule_days_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Day'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Day'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Day'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
          description: ''
    patch:
      operationId: weekly_schedule_days_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDay'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDay'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDay'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
          description: ''
    delete:
      operationId: weekly_schedule_days_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /weekly-schedule/grades/:
    get:
      operationId: weekly_schedule_grades_list
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grade'
          description: ''
    post:
      operationId: weekly_schedule_grades_create
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Grade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Grade'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
  /weekly-schedule/grades/{id}/:
    get:
      operationId: weekly_schedule_grades_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    put:
      operationId: weekly_schedule_grades_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Grade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Grade'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    patch:
      operationId: weekly_schedule_grades_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGrade'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    delete:
      operationId: weekly_schedule_grades_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /weekly-schedule/periods/:
    get:
      operationId: weekly_schedule_periods_list
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Period'
          description: ''
    post:
      operationId: weekly_schedule_periods_create
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Period'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Period'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Period'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Period'
          description: ''
  /weekly-schedule/periods/{id}/:
    get:
      operationId: weekly_schedule_periods_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Period'
          description: ''
    put:
      operationId: weekly_schedule_periods_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Period'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Period'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Period'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Period'
          description: ''
    patch:
      operationId: weekly_schedule_periods_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPeriod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPeriod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPeriod'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Period'
          description: ''
    delete:
      operationId: weekly_schedule_periods_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /weekly-schedule/schedules/:
    get:
      operationId: weekly_schedule_schedules_list
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
          description: ''
    post:
      operationId: weekly_schedule_schedules_create
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
  /weekly-schedule/schedules/{id}/:
    get:
      operationId: weekly_schedule_schedules_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    put:
      operationId: weekly_schedule_schedules_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    patch:
      operationId: weekly_schedule_schedules_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    delete:
      operationId: weekly_schedule_schedules_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /weekly-schedule/school-classes/:
    get:
      operationId: weekly_schedule_school_classes_list
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchoolClass'
          description: ''
    post:
      operationId: weekly_schedule_school_classes_create
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchoolClass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SchoolClass'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SchoolClass'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolClass'
          description: ''
  /weekly-schedule/school-classes/{id}/:
    get:
      operationId: weekly_schedule_school_classes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolClass'
          description: ''
    put:
      operationId: weekly_schedule_school_classes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchoolClass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SchoolClass'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SchoolClass'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolClass'
          description: ''
    patch:
      operationId: weekly_schedule_school_classes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSchoolClass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSchoolClass'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSchoolClass'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolClass'
          description: ''
    delete:
      operationId: weekly_schedule_school_classes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /weekly-schedule/subjects/:
    get:
      operationId: weekly_schedule_subjects_list
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subject'
          description: ''
    post:
      operationId: weekly_schedule_subjects_create
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subject'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
  /weekly-schedule/subjects/{id}/:
    get:
      operationId: weekly_schedule_subjects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
    put:
      operationId: weekly_schedule_subjects_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subject'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
    patch:
      operationId: weekly_schedule_subjects_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubject'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
    delete:
      operationId: weekly_schedule_subjects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /weekly-schedule/teachers/:
    get:
      operationId: weekly_schedule_teachers_list
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Teacher'
          description: ''
    post:
      operationId: weekly_schedule_teachers_create
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Teacher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Teacher'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
  /weekly-schedule/teachers/{id}/:
    get:
      operationId: weekly_schedule_teachers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
    put:
      operationId: weekly_schedule_teachers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Teacher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Teacher'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
    patch:
      operationId: weekly_schedule_teachers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeacher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeacher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeacher'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
    delete:
      operationId: weekly_schedule_teachers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - weekly-schedule
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Absence:
      type: object
      properties:
        student:
          type: integer
          readOnly: true
        date:
          type: string
          format: date
        status:
          type: string
          maxLength: 20
      required:
      - date
      - student
    AdminSignup:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        national_code:
          type: string
          maxLength: 11
        password:
          type: string
          maxLength: 128
        role:
          $ref: '#/components/schemas/RoleEnum'
        role2:
          type: string
          nullable: true
          maxLength: 32
      required:
      - first_name
      - last_name
      - national_code
      - password
    AdminSignupErrorResponse:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: string
      required:
      - errors
    AdminSignupSuccessResponse:
      type: object
      properties:
        message:
          type: string
          default: Admin registration successful.
    Answer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        answer_text:
          type: string
          nullable: true
        choice:
          type: integer
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - updated_at
      - user
    Choice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        question:
          type: integer
        choice_text:
          type: string
          maxLength: 255
      required:
      - choice_text
      - id
      - question
    Day:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 10
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
      required:
      - id
      - name
      - order
    Grade:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          $ref: '#/components/schemas/NameEnum'
      required:
      - id
      - name
    Login:
      type: object
      properties:
        national_code:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - national_code
      - password
    LoginErrorResponse:
      type: object
      properties:
        errors:
          type: string
          default: Invalid credentials.
    LoginSuccessResponse:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
        role:
          type: string
        national_code:
          type: string
      required:
      - access
      - national_code
      - refresh
      - role
    NameEnum:
      enum:
      - '7'
      - '8'
      - '9'
      - '10'
      - '11'
      - '12'
      type: string
      description: |-
        * `7` - هفتم
        * `8` - هشتم
        * `9` - نهم
        * `10` - دهم
        * `11` - یازدهم
        * `12` - دوازدهم
    PatchedAnswer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        answer_text:
          type: string
          nullable: true
        choice:
          type: integer
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedChoice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        question:
          type: integer
        choice_text:
          type: string
          maxLength: 255
    PatchedDay:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 10
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
    PatchedGrade:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          $ref: '#/components/schemas/NameEnum'
    PatchedPeriod:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        number:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
    PatchedQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        survey:
          type: integer
        question_text:
          type: string
          maxLength: 500
        question_type:
          $ref: '#/components/schemas/QuestionTypeEnum'
    PatchedSchedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        class_instance:
          type: integer
        day:
          type: integer
        period:
          type: integer
        subject:
          type: integer
        teacher:
          type: integer
        class_instance_name:
          type: string
          readOnly: true
        day_name:
          type: string
          readOnly: true
        period_name:
          type: string
          readOnly: true
        subject_name:
          type: string
          readOnly: true
        teacher_name:
          type: string
          readOnly: true
    PatchedSchoolClass:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 20
        grade:
          type: integer
    PatchedSubject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedSurvey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
    PatchedTeacher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
    Period:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        number:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
      required:
      - id
      - number
    Question:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        survey:
          type: integer
        question_text:
          type: string
          maxLength: 500
        question_type:
          $ref: '#/components/schemas/QuestionTypeEnum'
      required:
      - id
      - question_text
      - survey
    QuestionTypeEnum:
      enum:
      - text
      - multiple_choice
      type: string
      description: |-
        * `text` - متنی
        * `multiple_choice` - چند گزینه‌ای
    Response:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        question:
          type: integer
        answer_text:
          type: string
          nullable: true
      required:
      - id
      - question
      - user
    RoleEnum:
      enum:
      - Student
      - Admin
      type: string
      description: |-
        * `Student` - Student
        * `Admin` - Admin
    Schedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        class_instance:
          type: integer
        day:
          type: integer
        period:
          type: integer
        subject:
          type: integer
        teacher:
          type: integer
        class_instance_name:
          type: string
          readOnly: true
        day_name:
          type: string
          readOnly: true
        period_name:
          type: string
          readOnly: true
        subject_name:
          type: string
          readOnly: true
        teacher_name:
          type: string
          readOnly: true
      required:
      - class_instance
      - class_instance_name
      - day
      - day_name
      - id
      - period
      - period_name
      - subject
      - subject_name
      - teacher
      - teacher_name
    SchoolClass:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 20
        grade:
          type: integer
      required:
      - grade
      - id
      - name
    StudentSignup:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        national_code:
          type: string
          maxLength: 11
        password:
          type: string
          maxLength: 128
        grade:
          type: string
          writeOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - first_name
      - grade
      - last_name
      - national_code
      - password
    StudentSignupErrorResponse:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: string
      required:
      - errors
    StudentSignupSuccessResponse:
      type: object
      properties:
        message:
          type: string
          default: Student registration successful.
    Subject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    Survey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
      required:
      - description
      - end_date
      - id
      - start_date
      - title
    Teacher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
